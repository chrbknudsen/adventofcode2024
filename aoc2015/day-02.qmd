---
title: "Advent of Code 2015"
subtitle: "Day 2"
format: html
---

## Wrapping packages.

The total area of the box - we need to get the three pairwise products of
width, length and height. The sum of that should be multiplied by 2. And the 
smallest area should be added.

Two tests:
```{r}
test_1 <- c(2,3,4)
test_2 <- c(1,1,10)

```

We can get all the pairwise products using `combn`:

```{r}
(x <- combn(test_1, 2, prod))
```
The sum should be doubled, and the smallest value added:

```{r}
2*sum(x) + min(x)
```
That appears to be correct. Lets make a function:

```{r}
area <- function(x){
  x <- combn(x, 2, prod)
  2*sum(x) + min(x)
}
```

It also returns the correct result for test_2:

```{r}
area(test_2)
```


Download the input, read it in, convert it to a tibble, split on "x", and 
coerce to numeric:

```{r}
library(tidyverse)
input <- readLines("data/day-02-input.txt") %>% 
  as_tibble() %>% 
  mutate(dimensions = map(value, str_split_1, "x")) %>% 
  transmute(dimensions = map(dimensions, as.numeric))
```

Now map the area function on the list column, unnest and summarise to get the
sum:

```{r}
input %>% 
  transmute(area = map(dimensions, area)) %>% 
  unnest(area) %>% 
  summarise(svar = sum(area))
```

Neat.

## Task 2

Now we need the ribbon needed in total. Both around the package, and for
the bow. 

The length need for the wrapping is the sum of all three dimensions,
minus the largest value. And multiply by 2:

We write a function for that:
```{r}
wrap <- function(x){
  2*(sum(x) - max(x))
}
```


Then theres the ribbon. For some undisclosed reason, that is simply the
product of the dimensions. We're not going to write a function for that.


We already have the input with a list column, dimensions, with numericial
vectors.

We mutate two new columns into existence, the ribbon is the product,
the wrap is found using our function from before:
```{r}
input <- input %>% 
  mutate(ribbon = map(dimensions, prod)) %>% 
  mutate(wrap = map(dimensions, wrap))
input
```

Unnest those, add, and summarise:
 
 
```{r}
input %>% 
  unnest(c(ribbon, wrap)) %>% 
  transmute(sub_tot = ribbon + wrap) %>% 
  summarise(answer = sum(sub_tot))

```
 
Done.
