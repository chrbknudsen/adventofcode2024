---
title: "Advent of Code 2024"
subtitle: "Day 3"
format: html
---

## Regular expressions

This is an exercise in regular expressions, and datamanipulation.

We need to extract all parts of the input text matching the form "mul(123,456)"



As always:
```{r load-libs, message = FALSE}
library(tidyverse)
```

And read the data - again a local copy:
```{r}
input <- readLines("data/day-03-input.txt") 
```



So lets do that:

```{r}
input <- input %>% as_tibble() %>% 
  transmute(multiplications = str_extract_all(value, "mul\\(\\d{1,3}\\,\\d{1,3}\\)", simplify = F) ) %>% 
  unnest(multiplications)
input
```

Next remove stuff:
```{r}
input <- input %>%
  mutate(multiplications = str_remove_all(multiplications, "mul\\(|\\)")) 
input
```

Split on ",", coerce to numeric, 

```{r}
input <- input %>% 
    separate_wider_delim(multiplications, delim = ",", names = c("factor_1", "factor_2")) %>% 
    mutate(across(everything(), as.numeric)) 
  
input
```

Finally multiply and summarise to get the answer:
```{r}
input %>% 
  transmute(products = factor_1 * factor_2) %>% 
  summarise(answer = sum(products))
```

## Task 2

Now it gets more complicated. There are instructions in the text. "do()" in the 
text indicates that all following multiplications should be executed. "don't()" 
that all following multiplications should not.

We need to identify those as well. 

Start by reading in the data again, because assigning data back into the original
is a bad idea...

```{r}
input <- readLines("data/day-03-input.txt") 
```

Now we convert it to a tibble like before, but now we also extract the two
different types of instructions:
```{r}
input <- input %>% as_tibble() %>% 
  transmute(instructions = str_extract_all(value, "mul\\(\\d{1,3}\\,\\d{1,3}\\)|do\\(\\)|don\\'t\\(\\)", simplify = F) ) %>% 
  unnest(instructions)
input
```
We can't see it here, but there are do's and don'ts in the instructions column.

Those needs to be separated out:

```{r}
input <- input %>%
  mutate(instruction = case_when(
                              str_detect(instructions, "do") ~ instructions,
                              .default = NA))
input
```

Again - they are there...

When we encounter a "do()" in the instruction column, all following 
multiplications should be executed, until we encounter a "don't()". So we fill
down. We still have som NA's at the top of the tibble, we replace those with "do()"


```{r}
input <- input  %>% 
  fill(instruction, .direction="down") %>% 
  replace_na(list(instruction = "do()")) 
input
```

We are only interested in the multiplicaitons with "do()" in the instruction
column - lets filter to get them:

```{r}
input <- input %>% 
  filter(instruction != "don't()") %>% 
  filter(str_starts(instructions, "m"))
```

We also need to get rid of those control-words in the instructions column.


And now the rest is done as before:

```{r}
input %>% 
  mutate(instructions = str_remove_all(instructions, "mul\\(|\\)")) %>% 
  separate_wider_delim(instructions, delim = ",", names = c("factor_1", "factor_2")) %>% 
  mutate(across(everything(), as.numeric)) %>% 
  transmute(products = factor_1 * factor_2) %>% 
  summarise(answer = sum(products))
  
```

Done.